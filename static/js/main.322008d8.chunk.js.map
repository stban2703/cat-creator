{"version":3,"sources":["utils/getImageSrcFromUrl.ts","components/AttributeItem/AttributeItem.tsx","components/AttributeSelection/AttributeSelection.tsx","components/AttributeColorSection/AttributeColorSection.tsx","utils/lightenDarkColor.ts","components/AttributeTypeItem/AttributeTypeItem.tsx","components/AttributeTypeSection/AttributeTypeSection.tsx","components/FilterSection/FilterSection.tsx","components/AttributeOptions/AttributeOptions.tsx","utils/getTitleFromAttribute.ts","utils/getSubtitleFromAttribute.ts","utils/getColorListFromAttribute.ts","components/CatControl/CatControl.tsx","components/EditPanel/EditPanel.tsx","containers/App/initialCatProps.ts","containers/App/initialAttributeOptions.ts","utils/svgSelectors.ts","components/CatView/CatView.tsx","utils/getFilterFromValue.ts","utils/handleCamera.ts","components/EditView/EditView.tsx","containers/Creator/Creator.tsx","containers/Intro/Intro.tsx","components/CatItem/CatItem.tsx","containers/CreatedCats/CreatedCats.tsx","containers/App/App.tsx","index.tsx"],"names":["baseUrl","process","getImageSrcFromUrl","url","includes","AttributeItem","value","checked","onChangeCurrentAttribute","imageSrc","className","onClick","src","alt","AttributeSelection","attributeOptions","map","id","AttributeColorSection","colorList","onEditAttributeColor","useState","color","setColor","onChange","hex","colorStroke","amt","usePound","slice","num","parseInt","r","b","g","toString","lightenDarkenColor","colors","AttributeTypeItem","onEditAttributeType","checkedSrc","AttributeTypeSection","itemList","subtitle","itemId","FilterSection","catFilter","onChangeFilter","event","target","AttributeOptions","catProps","currentAttribute","title","attribute","getTitleFromAttribute","getSubtitleFromAttribute","getColorListFromAttribute","filter","CatControl","onEditCatName","onSaveCat","useParams","history","useHistory","type","name","catName","placeholder","autoComplete","maxLength","push","to","EditPanel","newAttribute","index","findIndex","elem","getItemListFromId","initialCatProps","creationDate","Date","now","settings","fill","stroke","initialAttributeOptions","svgSelectors","CatView","catFurProps","catEyesProps","catNecklaceProps","catHatProps","catSceneProps","shadowSelector","furOnlyStrokeSelector","furFillAndStrokeSelector","eyesFillSelector","linesPatternSelector","colorAndWhitePatternSelector","siamesePatternSelector","tricolorYellowSelector","tricolorBlackSelector","pupilContractedSelector","pupilNormalSelector","pupilExpandedSelector","baseNecklaceSelector","roundNecklaceSelector","heartNecklaceSelector","ribbonNecklaceSelector","necklaceTextSelector","topHatSelector","partyHatSelector","getFilterFromValue","camera","handleCamera","style","backgroundImage","path","selector","display","fill-opacity","EditView","Creator","catList","setCatProps","setCurrentAttribute","setAttributeOptions","useEffect","catPropsElem","find","JSON","parse","stringify","newName","catCopy","newType","catSettingsCopy","catSettingsIndex","attributeOptionsCopy","attributeOptionsIndex","itemListCopy","forEach","colorFill","catPropsCopy","newCurrentAttribute","copy","e","Intro","CatItem","onDeleteCat","catPreviewRef","useRef","isDownloading","setIsDownloading","ref","toLocaleDateString","toLocaleTimeString","domtoimage","toBlob","current","then","blob","saveAs","CreatedCats","App","storageList","window","localStorage","getItem","setCatList","setItem","handleSaveCat","catListCopy","catIndex","newCat","Math","round","random","handleDeleteCat","splice","basename","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.322008d8.chunk.js","sourcesContent":["const baseUrl = `${process.env.PUBLIC_URL}/images/`\r\n\r\nexport const getImageSrcFromUrl = (url: string) => {\r\n    if (url.includes(\"blank\")) {\r\n        return undefined;\r\n    } else return `${baseUrl}${url}.svg`;\r\n}","import React from 'react';\r\nimport { getImageSrcFromUrl } from '../../utils/getImageSrcFromUrl';\r\nimport './AttributeItem.css'\r\n\r\ninterface AttributeItemProps {\r\n    value: string;\r\n    url: string;\r\n    checked: boolean;\r\n    onChangeCurrentAttribute: () => void;\r\n}\r\n\r\nexport const AttributeItem:React.FC<AttributeItemProps> = ({ value, url, checked, onChangeCurrentAttribute }) => {\r\n    const imageSrc = getImageSrcFromUrl(url)\r\n\r\n    return(\r\n        <div className={`AttributeItem${checked ? \" AttributeItem--selected\" : \"\"}`} onClick={onChangeCurrentAttribute}>\r\n            <img className={`AttributeItem__image`} src={imageSrc} alt=\"\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { AttributeOptionType } from '../../utils/AttributeOptionType';\r\nimport { AttributeItem } from '../AttributeItem/AttributeItem';\r\nimport './AttributeSelection.css';\r\n\r\ninterface AttributeSelectionProps {\r\n    attributeOptions: AttributeOptionType[];\r\n    onChangeCurrentAttribute: (newCurrentAttribute: string) => void;\r\n}\r\n\r\nexport const AttributeSelection: React.FC<AttributeSelectionProps> = ({ attributeOptions, onChangeCurrentAttribute }) => {\r\n    return (\r\n        <section className=\"AttributeSelection\">\r\n            {attributeOptions.map(({ id, url, checked }) => {\r\n                const intermediateChangeAttribute = () => {\r\n                    onChangeCurrentAttribute(id)\r\n                }\r\n                return <AttributeItem key={id} value={id} url={url} checked={checked} onChangeCurrentAttribute={intermediateChangeAttribute}/>\r\n            })}\r\n        </section>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { ColorResult, TwitterPicker } from 'react-color';\r\nimport { lightenDarkenColor } from '../../utils/lightenDarkColor';\r\nimport './AttributeColorSection.css';\r\n\r\ninterface AttributeColorSectionProps {\r\n    colorList: string[];\r\n    onEditAttributeColor: (colorFill: string, colorStroke: string) => void;\r\n}\r\n\r\nexport const AttributeColorSection: React.FC<AttributeColorSectionProps> = ({ colorList, onEditAttributeColor }) => {\r\n    const [color, setColor] = useState(\"#FFFFFF\");\r\n    const handleColor = (color: ColorResult) => {\r\n        setColor(color.hex);\r\n        const colorStroke = lightenDarkenColor(color.hex, -80);\r\n        onEditAttributeColor(color.hex, colorStroke)\r\n    };\r\n    // Original list: ['#FFFFFF', '#EBEBEB', '#ABB8C3', '#000000', '#0BF86A', '#8ED1FC', '#FF6900', '#FCB900', '#EB144C', '#F78DA7', '#9900EF']\r\n    return (\r\n        <section className=\"AttributeColorSection\">\r\n            <h3 className=\"AttributeColorSection__title\">Color</h3>\r\n            <TwitterPicker color={color} onChange={handleColor} colors={colorList} />\r\n        </section>\r\n    )\r\n}","export const lightenDarkenColor = (color: string, amt: number) => {\r\n    // https://css-tricks.com/snippets/javascript/lighten-darken-color/\r\n    let usePound = false;\r\n    if (color[0] === \"#\") {\r\n        color = color.slice(1);\r\n        usePound = true;\r\n    }\r\n    let num = parseInt(color, 16);\r\n    let r = (num >> 16) + amt;\r\n    if (r > 255) r = 255;\r\n    else if (r < 0) r = 0;\r\n    let b = ((num >> 8) & 0x00FF) + amt;\r\n    if (b > 255) b = 255;\r\n    else if (b < 0) b = 0;\r\n    let g = (num & 0x0000FF) + amt;\r\n    if (g > 255) g = 255;\r\n    else if (g < 0) g = 0;\r\n\r\n    // https://stackoverflow.com/questions/12043187/how-to-check-if-hex-color-is-too-black\r\n    let luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n\r\n    if (luma < 30) {\r\n        let num = parseInt(color, 16);\r\n        let r = (num >> 16) + 80;\r\n        if (r > 255) r = 255;\r\n        else if (r < 0) r = 0;\r\n        let b = ((num >> 8) & 0x00FF) + 80;\r\n        if (b > 255) b = 255;\r\n        else if (b < 0) b = 0;\r\n        let g = (num & 0x0000FF) + 80;\r\n        if (g > 255) g = 255;\r\n        else if (g < 0) g = 0;\r\n        return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n    }\r\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n}","import React from 'react';\r\nimport { getImageSrcFromUrl } from '../../utils/getImageSrcFromUrl';\r\nimport './AttributeTypeItem.css';\r\n\r\ninterface AttributeTypeItemProps {\r\n    value: string;\r\n    checked: boolean;\r\n    url: string;\r\n    onEditAttributeType: () => void;\r\n}\r\n\r\nexport const AttributeTypeItem: React.FC<AttributeTypeItemProps> = ({ value, url, checked, onEditAttributeType }) => {\r\n    const imageSrc = getImageSrcFromUrl(url);\r\n    const checkedSrc = getImageSrcFromUrl(\"items/checked\");\r\n\r\n    return (\r\n        <div className=\"AttributeTypeItem\" onClick={onEditAttributeType}>\r\n            <img className=\"AttributeTypeItem__image\" src={imageSrc} alt=\"\" />\r\n            <img className={`AttributeTypeItem__check${checked ? '' : ' AttributeTypeItem__check--remove'}`} src={checkedSrc} alt=\"\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { AttributeTypeItem } from '../AttributeTypeItem/AttributeTypeItem';\r\nimport './AttributeTypeSection.css';\r\n\r\ninterface AttributeTypeSectionProps {\r\n    itemList: { itemId: number, value: string, url: string, checked: boolean }[];\r\n    subtitle: string;\r\n    onEditAttributeType: (newType: string) => void;\r\n}\r\n\r\nexport const AttributeTypeSection: React.FC<AttributeTypeSectionProps> = ({ itemList, subtitle, onEditAttributeType }) => {\r\n    return (\r\n        <section className=\"AttributeTypeSection\">\r\n            <h3 className=\"AttributeTypeSection__title\">{subtitle}</h3>\r\n            <div className=\"AttributeTypeSection__items\">\r\n                {itemList.map(({ itemId, value, url, checked }) => {\r\n                    const intermediateEditType = () => {\r\n                        onEditAttributeType(value);\r\n                    }\r\n                    return <AttributeTypeItem key={itemId} value={value} url={url} checked={checked} onEditAttributeType={intermediateEditType} />\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport \"./FilterSection.css\";\r\n\r\ninterface FilterSectionProps {\r\n    catFilter: string;\r\n    onChangeFilter: (value: string) => void;\r\n}\r\n\r\nexport const FilterSection:React.FC<FilterSectionProps> = ({catFilter, onChangeFilter}) => {\r\n\r\n    const handleSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\r\n        onChangeFilter(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <section className=\"FilterSection\">\r\n            <h3 className=\"FilterSection__title\">Filtro</h3>\r\n            <select className=\"FilterSection__select\" onChange={handleSelectChange} value={catFilter} >\r\n               <option value=\"none\">\r\n                    Ninguno\r\n               </option>\r\n               <option value=\"grayscale\">\r\n                    Escala de grises\r\n               </option>\r\n               <option value=\"invert\">\r\n                    Invertido\r\n               </option>\r\n               <option value=\"sepia\">\r\n                    Sepia\r\n               </option>\r\n            </select>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport { getColorListFromAttribute } from '../../utils/getColorListFromAttribute';\r\nimport { getSubtitleFromAttribute } from '../../utils/getSubtitleFromAttribute';\r\nimport { getTitleFromAttribute } from '../../utils/getTitleFromAttribute';\r\nimport { TypeItemType } from '../../utils/TypeItemType';\r\nimport { AttributeColorSection } from '../AttributeColorSection/AttributeColorSection';\r\nimport { AttributeTypeSection } from '../AttributeTypeSection/AttributeTypeSection';\r\nimport { FilterSection } from '../FilterSection/FilterSection';\r\nimport \"./AttributeOptions.css\";\r\n\r\ninterface AttributeOptionsProps {\r\n    catProps: CatPropsType;\r\n    currentAttribute: string;\r\n    itemList: TypeItemType[];\r\n    onEditAttributeType: (newType: string) => void;\r\n    onEditAttributeColor: (colorFill: string, colorStroke: string) => void;\r\n    onChangeFilter: (value: string) => void;\r\n}\r\n\r\nexport const AttributeOptions: React.FC<AttributeOptionsProps> = ({ catProps, currentAttribute, itemList, onEditAttributeType, onEditAttributeColor, onChangeFilter }) => {\r\n    const title = getTitleFromAttribute(currentAttribute);\r\n    const subtitle = getSubtitleFromAttribute(currentAttribute);\r\n    const colorList = getColorListFromAttribute(currentAttribute);\r\n\r\n    switch (currentAttribute) {\r\n        case \"scene\":\r\n            return (\r\n                <section className=\"AttributeOptions\">\r\n                    <h2 className=\"AttributeOptions__title\">{title}</h2>\r\n                    <AttributeTypeSection itemList={itemList} subtitle={subtitle!} onEditAttributeType={onEditAttributeType} />\r\n                    <FilterSection catFilter={catProps.filter} onChangeFilter={onChangeFilter} />\r\n                </section>\r\n            )\r\n\r\n        default:\r\n            return (\r\n                <section className=\"AttributeOptions\">\r\n                    <h2 className=\"AttributeOptions__title\">{title}</h2>\r\n                    <AttributeTypeSection itemList={itemList} subtitle={subtitle!} onEditAttributeType={onEditAttributeType} />\r\n                    <AttributeColorSection colorList={colorList} onEditAttributeColor={onEditAttributeColor} />\r\n                </section>\r\n            )\r\n    }\r\n}","export const getTitleFromAttribute = (attribute: string) => {\r\n    switch (attribute) {\r\n        case \"fur\":\r\n            return \"Pelaje\";\r\n\r\n        case \"eyes\":\r\n            return \"Ojos\";\r\n\r\n        case \"necklace\":\r\n            return \"Collar\";\r\n\r\n        case \"hat\":\r\n            return \"Sombrero\";\r\n\r\n        case \"scene\":\r\n            return \"Escenario\";\r\n    }\r\n}","export const getSubtitleFromAttribute = (currentAttribute: string) => {\r\n    switch (currentAttribute) {\r\n        case \"fur\":\r\n            return \"Patrón\"\r\n        case \"eyes\":\r\n            return \"Pupila\"\r\n        case \"necklace\":\r\n            return \"Accesorio\"\r\n        case \"hat\":\r\n            return \"Tipo\"\r\n        case \"scene\":\r\n            return \"Fondo\"\r\n    }\r\n}","export const getColorListFromAttribute = (attribute: string) => {\r\n    switch (attribute) {\r\n        case \"fur\":\r\n            return [\r\n                '#FFFFFF',\r\n                '#EBEBEB',\r\n                '#ABB8C3',\r\n                '#8ED1FC',\r\n                '#EA9142',\r\n                '#D4A113',\r\n                '#F78DA7',\r\n                '#000000'\r\n            ]\r\n        case \"eyes\":\r\n        default:\r\n            return [\r\n                '#ABB8C3',\r\n                '#000000',\r\n                '#0BF86A',\r\n                '#05F0FF',\r\n                '#FF6900',\r\n                '#FCB900',\r\n                '#EB144C',\r\n                '#F78DA7',\r\n                '#9900EF'\r\n            ]\r\n        case \"necklace\":\r\n            return [\r\n                '#ABB8C3',\r\n                '#000000',\r\n                '#67D26B',\r\n                '#61ACF2',\r\n                '#FF6900',\r\n                '#FCB900',\r\n                '#EB144C',\r\n                '#F78DA7',\r\n                '#9900EF'\r\n            ]\r\n        case \"hat\":\r\n            return [\r\n                '#ABB8C3',\r\n                '#000000',\r\n                '#67D26B',\r\n                '#61ACF2',\r\n                '#FF6900',\r\n                '#FCB900',\r\n                '#EB144C',\r\n                '#F78DA7',\r\n                '#9900EF'\r\n            ]\r\n    }\r\n}","import React from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport './CatControl.css';\r\n\r\ninterface CatControlProps {\r\n    catProps: CatPropsType;\r\n    onEditCatName: (newName: string) => void;\r\n    onSaveCat: (id: string, elem: CatPropsType) => void;\r\n}\r\n\r\nexport const CatControl: React.FC<CatControlProps> = ({ catProps, onEditCatName, onSaveCat }) => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const history = useHistory();\r\n    const handleTextChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        onEditCatName(event.target.value);\r\n    }\r\n    const intermediateSaveCat = () => {\r\n        onSaveCat(id, catProps);\r\n        history.push(\"/cats/\");\r\n    }\r\n    return (\r\n        <section className=\"CatControl\">\r\n            <input className=\"CatControl__input\" type=\"text\" name=\"catName\" value={catProps.catName} placeholder=\"Escribe el nombre de tu gato\" onChange={handleTextChange} autoComplete=\"off\" maxLength={10} />\r\n            <div className=\"CatControl__options\">\r\n                <div className=\"CatControl__section\">\r\n                    <button className=\"CatControl__btn CatControl__btn--green\" onClick={intermediateSaveCat} >\r\n                        Guardar\r\n                    </button>\r\n                </div>\r\n                <div className=\"CatControl__section\">\r\n                    <Link className=\"CatControl__btn CatControl__btn--navegate\" to={'/cats/'}>\r\n                        Ver creados\r\n                    </Link>\r\n                    <Link className=\"CatControl__btn CatControl__btn--exit\" to={'/'}>\r\n                        Salir\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport { AttributeOptionType } from '../../utils/AttributeOptionType';\r\nimport { AttributeSelection } from '../AttributeSelection/AttributeSelection';\r\nimport { AttributeOptions } from '../AttributeOptions/AttributeOptions';\r\nimport './EditPanel.css';\r\nimport { CatControl } from '../CatControl/CatControl';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\n\r\ninterface EditPanelProps {\r\n    catProps: CatPropsType;\r\n    attributeOptions: AttributeOptionType[];\r\n    currentAttribute: string;\r\n    onEditCatName: (newName: string) => void;\r\n    onEditAttributeType: (newType: string) => void;\r\n    onEditAttributeColor: (colorFill: string, colorStroke: string) => void;\r\n    onChangeFilter: (value: string) => void;\r\n    onChangeCurrentAttribute: (newCurrentAttribute: string) => void;\r\n    onSaveCat: (id: string, elem: CatPropsType) => void;\r\n}\r\n\r\nexport const EditPanel: React.FC<EditPanelProps> = ({ catProps, attributeOptions, currentAttribute, onEditCatName, onEditAttributeType, onEditAttributeColor, onChangeFilter, onChangeCurrentAttribute, onSaveCat }) => {\r\n\r\n    const getItemListFromId = (newAttribute: string) => {\r\n        const copy = attributeOptions.slice();\r\n        const index = copy.findIndex((elem) => {\r\n            return elem.id === newAttribute;\r\n        })\r\n        const newItemList = attributeOptions[index].itemList;\r\n        return newItemList;\r\n    };\r\n\r\n    const itemList = getItemListFromId(currentAttribute);\r\n\r\n    return (\r\n        <article className=\"EditPanel\">\r\n            <AttributeSelection attributeOptions={attributeOptions} onChangeCurrentAttribute={onChangeCurrentAttribute} />\r\n            <AttributeOptions catProps={catProps} currentAttribute={currentAttribute} onEditAttributeType={onEditAttributeType} onEditAttributeColor={onEditAttributeColor} onChangeFilter={onChangeFilter} itemList={itemList} />\r\n            <CatControl catProps={catProps} onEditCatName={onEditCatName} onSaveCat={onSaveCat} />\r\n        </article>\r\n    )\r\n}","export const initialCatProps = {\r\n    id: \"new\",\r\n    catName: \"\",\r\n    creationDate: Date.now(),\r\n    filter: \"string\",\r\n    settings: [\r\n        {\r\n            id: \"fur\",\r\n            type: \"blank\",\r\n            fill: \"#ffffff\",\r\n            stroke: \"#AFAFAF\"\r\n        },\r\n        {\r\n            id: \"eyes\",\r\n            type: \"expanded\",\r\n            fill: \"#0BF86A\",\r\n            stroke: \"none\"\r\n        },\r\n        {\r\n            id: \"necklace\",\r\n            type: \"blank\",\r\n            fill: \"#61ACF2\",\r\n            stroke: \"#115ca2\"\r\n        },\r\n        {\r\n            id: \"hat\",\r\n            type: \"blank\",\r\n            fill: \"#000000\",\r\n            stroke: \"#505050\"\r\n        },\r\n        {\r\n            id: \"scene\",\r\n            type: \"backgrounds/room\",\r\n            fill: \"none\",\r\n            stroke: \"none\"\r\n        }\r\n    ]\r\n}","export const initialAttributeOptions = [\r\n    {\r\n        id: \"fur\",\r\n        url: \"attributes/fur\",\r\n        checked: true,\r\n        itemList: [\r\n            {\r\n                itemId: 0,\r\n                value: \"blank\",\r\n                url: \"items/blank\",\r\n                checked: false,\r\n            },\r\n            {\r\n                itemId: 1,\r\n                value: \"lines\",\r\n                url: \"items/lines\",\r\n                checked: false,\r\n            },\r\n            {\r\n                itemId: 2,\r\n                value: \"colorAndWhite\",\r\n                url: \"items/colorAndWhite\",\r\n                checked: false,\r\n            },\r\n            {\r\n                itemId: 3,\r\n                value: \"siamese\",\r\n                url: \"items/siamese\",\r\n                checked: false,\r\n            },\r\n            {\r\n                itemId: 4,\r\n                value: \"tricolor\",\r\n                url: \"items/tricolor\",\r\n                checked: false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: \"eyes\",\r\n        url: \"attributes/eyes\",\r\n        checked: false,\r\n        itemList: [\r\n            {\r\n                itemId: 0,\r\n                value: \"expanded\",\r\n                url: \"items/expanded\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 1,\r\n                value: \"normal\",\r\n                url: \"items/normal\",\r\n                checked: false\r\n            },\r\n            {\r\n\r\n                itemId: 2,\r\n                value: \"contracted\",\r\n                url: \"items/contracted\",\r\n                checked: false\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: \"necklace\",\r\n        url: \"attributes/necklace\",\r\n        checked: false,\r\n        itemList: [\r\n            {\r\n                itemId: 0,\r\n                value: \"blank\",\r\n                url: \"items/blank\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 1,\r\n                value: \"round\",\r\n                url: \"items/round\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 2,\r\n                value: \"heart\",\r\n                url: \"items/heart\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 3,\r\n                value: \"ribbon\",\r\n                url: \"items/ribbon\",\r\n                checked: false\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: \"hat\",\r\n        url: \"attributes/hat\",\r\n        checked: false,\r\n        itemList: [\r\n            {\r\n                itemId: 0,\r\n                value: \"blank\",\r\n                url: \"items/blank\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 1,\r\n                value: \"tophat\",\r\n                url: \"items/tophat\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 2,\r\n                value: \"party\",\r\n                url: \"items/party\",\r\n                checked: false\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: \"scene\",\r\n        url: \"attributes/scene\",\r\n        checked: false,\r\n        itemList: [\r\n            {\r\n                itemId: 0,\r\n                value: \"backgrounds/room\",\r\n                url: \"items/roomitem\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 1,\r\n                value: \"backgrounds/bed\",\r\n                url: \"items/beditem\",\r\n                checked: false\r\n            },\r\n            {\r\n                itemId: 2,\r\n                value: \"backgrounds/park\",\r\n                url: \"items/parkitem\",\r\n                checked: false\r\n            }\r\n        ],\r\n    }\r\n];","export const svgSelectors = {\r\n    shadow: \"#tail-shadow, #paw-left-shadow, #paw-right-shadow, #body-back-shadow, #body-front-shadow, #neck-shadow, #paws-front-left-shadow, #paws-front-right-shadow, #ear-left-outside-shadow, #ear-left-inside-shadow, #ear-right-inside-shadow, #head-shadow-left\",\r\n    furOnlyStroke:\"#eye-left-shadow, #eye-right-shadow, #mouth, #whisker-left-1, #whisker-left-2, #whisker-left-3, #whisker-right-1, #whisker-right-2, #whisker-right-3\",\r\n    furFillAndStroke:\"#head, #ear-left-outside, #ear-right-outside, #body-front, #body-back, #paw-left, #paw-right, #tail\",\r\n    eyesFill:\"#eye-left-color, #eye-right-color\",\r\n    linesPattern:\"#tail-linePattern00, #tail-linePattern01, #tail-linePattern02, #tail-linePattern03, #tail-linePattern04, #tail-linePattern05, #body-back-linePattern00, #body-back-linePattern01, #body-back-linePattern02, #body-back-linePattern03, #body-back-linePattern04, #body-back-linePattern05, #body-back-linePattern06, #body-back-linePattern07, #body-front-linePattern00, #body-front-linePattern01, #body-front-linePattern02, #body-front-linePattern03, #body-front-linePattern04, #body-front-linePattern05, #body-front-linePattern06, #body-front-linePattern07, #body-front-linePattern08, #body-front-linePattern09, #body-front-linePattern10, #body-front-linePattern11, #body-front-linePattern12, #body-front-linePattern13, #body-front-linePattern14, #body-front-linePattern15, #body-front-linePattern16, #head-linePattern00, #head-linePattern01, #head-linePattern02, #head-linePattern03, #head-linePattern04, #head-linePattern05, #head-linePattern06, #head-linePattern07, #head-linePattern08, #ear-left-linePattern, #ear-right-linePattern\",\r\n    colorAndWhitePattern: \"#tail-cwPattern, #paw-left-back-cwPattern, #paw-right-back-cwPattern, #paw-front-left-cwPattern, #paw-front-right-cwPattern, #body-front-cwPattern, #body-back-cwPattern, #head-cwPattern\",\r\n    siamesePattern: \"#tail-siamesePattern, #paw-left-back-siamesePattern, #paw-right-back-siamesePattern, #leg-front-left-siamesePattern, #leg-front-right-siamesePattern, #ear-left-siamesePattern, #ear-right-siamesePattern, #head-siamesePattern\",\r\n    tricolorPatternYellow: \"#tail-tricolorPattern00, #tail-tricolorPattern01, #tail-tricolorPattern02, #back-left-tricolorPattern, #back-right-tricolorPattern, #body-front-tricolorPattern00, #body-front-tricolorPattern01, #ear-left-outside-tricolorPattern, #head-tricolorPattern00, #head-tricolorPattern01\",\r\n    tricolorPatternBlack: \"#tail-tricolorPattern-black00, #tail-tricolorPattern-black01, #tail-tricolorPattern-black02, #tail-tricolorPattern-black03, #back-left-tricolorPattern-black, #back-right-tricolorPattern-black, #body-front-tricolorPattern-black00, #body-front-tricolorPattern-black01, #ear-right-outside-tricolorPattern-black, #head-tricolorPattern-black\",\r\n    pupilContracted: \".pupil-contracted\",\r\n    pupilNormal: \".pupil-normal\",\r\n    pupilExpanded: \".pupil-expanded\",\r\n    baseNecklace: \"#necklace-base\",\r\n    roundNecklace: \"#necklace-round, #necklace-round-light\",\r\n    heartNecklace: \"#necklace-heart, #necklace-heart-light\",\r\n    ribbonNecklace: \"#necklace-ribbon00, #necklace-ribbon01, #necklace-ribbon02\",\r\n    necklaceText: \"#necklace-text\",\r\n    topHatSelector: \"#tophat-00, #tophat-01\",\r\n    partyHatSelector: \"#party-color01, #party-color02, #party-color03\",\r\n}","import React from 'react';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport { SvgLoader, SvgProxy } from \"react-svgmt\";\r\nimport './CatView.css';\r\nimport { svgSelectors } from '../../utils/svgSelectors';\r\nimport { handleCamera } from '../../utils/handleCamera';\r\nimport { getImageSrcFromUrl } from '../../utils/getImageSrcFromUrl';\r\nimport { getFilterFromValue } from '../../utils/getFilterFromValue';\r\n\r\ninterface CatViewProps {\r\n    catProps: CatPropsType;\r\n    currentAttribute: string;\r\n}\r\n\r\nexport const CatView: React.FC<CatViewProps> = ({ catProps, currentAttribute }) => {\r\n    const catFurProps = catProps.settings[0];\r\n    const catEyesProps = catProps.settings[1];\r\n    const catNecklaceProps = catProps.settings[2];\r\n    const catHatProps = catProps.settings[3];\r\n    const catSceneProps = catProps.settings[4];\r\n\r\n    // SVG selectors\r\n    const shadowSelector = svgSelectors.shadow;\r\n    const furOnlyStrokeSelector = svgSelectors.furOnlyStroke;\r\n    const furFillAndStrokeSelector = svgSelectors.furFillAndStroke;\r\n    const eyesFillSelector = svgSelectors.eyesFill;\r\n    const linesPatternSelector = svgSelectors.linesPattern;\r\n    const colorAndWhitePatternSelector = svgSelectors.colorAndWhitePattern;\r\n    const siamesePatternSelector = svgSelectors.siamesePattern;\r\n    const tricolorYellowSelector = svgSelectors.tricolorPatternYellow;\r\n    const tricolorBlackSelector = svgSelectors.tricolorPatternBlack;\r\n    const pupilContractedSelector = svgSelectors.pupilContracted;\r\n    const pupilNormalSelector = svgSelectors.pupilNormal;\r\n    const pupilExpandedSelector = svgSelectors.pupilExpanded;\r\n    const baseNecklaceSelector = svgSelectors.baseNecklace;\r\n    const roundNecklaceSelector = svgSelectors.roundNecklace;\r\n    const heartNecklaceSelector = svgSelectors.heartNecklace;\r\n    const ribbonNecklaceSelector = svgSelectors.ribbonNecklace;\r\n    const necklaceTextSelector = svgSelectors.necklaceText;\r\n    const topHatSelector = svgSelectors.topHatSelector;\r\n    const partyHatSelector = svgSelectors.partyHatSelector;\r\n\r\n    // Visualization\r\n    const filter = getFilterFromValue(catProps.filter);\r\n    const camera = handleCamera(currentAttribute);\r\n\r\n    return (\r\n        <div className={`CatView ${camera}`} style={{ backgroundImage: `url(${getImageSrcFromUrl(`${catSceneProps.type}`)}`, filter: `${filter}` }}>\r\n            <SvgLoader className=\"CatView__container\" path={`${process.env.PUBLIC_URL}/images/render/cathats.svg`}>\r\n                <SvgProxy selector={eyesFillSelector} fill={catEyesProps.fill} />\r\n                <SvgProxy selector={furOnlyStrokeSelector} fill={catFurProps.stroke} />\r\n                <SvgProxy selector={furFillAndStrokeSelector} fill={catFurProps.fill} stroke={catFurProps.stroke} />\r\n                <SvgProxy selector={linesPatternSelector} fill={catFurProps.stroke} display={catFurProps.type === \"lines\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={\"#ear-left-linePattern, #ear-right-linePattern\"} stroke={catFurProps.type === \"lines\" ? \"rgba(0, 0, 0, 0.1)\" : catFurProps.stroke} />\r\n                <SvgProxy selector={colorAndWhitePatternSelector} display={catFurProps.type === \"colorAndWhite\" ? \"visible\" : \"none\"} fill={catFurProps.fill === \"#ffffff\" ? \"lightGray\" : \"#FFFFFF\"} />\r\n                <SvgProxy selector={siamesePatternSelector} fill={\"#4B3636\"} display={catFurProps.type === \"siamese\" ? \"visible\" : \"none\"} stroke={catFurProps.stroke} />\r\n                <SvgProxy selector={furOnlyStrokeSelector} fill={catFurProps.type === \"siamese\" ? \"#000000\" : catFurProps.stroke} />\r\n                <SvgProxy selector={\"#nose, #ear-left-inside, #ear-right-inside\"} fill={catFurProps.type === \"siamese\" ? \"#000000\" : \"#FFC3F9\"} />\r\n                <SvgProxy selector={shadowSelector} fill-opacity={catFurProps.type === \"siamese\" ? \"0.25\" : \"0.1\"} />\r\n                <SvgProxy selector={tricolorYellowSelector + \", \" + tricolorBlackSelector} display={catFurProps.type === \"tricolor\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={tricolorBlackSelector} fill={catFurProps.fill === \"#000000\" ? \"#E9B388\" : \"#000000\"} />\r\n                <SvgProxy selector={tricolorYellowSelector} fill={catFurProps.fill === \"#000000\" ? \"#FFFFFF\" : \"#E9B388\"} />\r\n                <SvgProxy selector={\"#ear-left-inside, #ear-right-inside\"} fill={catFurProps.type === \"tricolor\" ? \"darkGray\" : \"#FFC3F9\"} />\r\n                <SvgProxy selector={pupilContractedSelector} display={catEyesProps.type === \"contracted\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={pupilNormalSelector} display={catEyesProps.type === \"normal\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={pupilExpandedSelector} display={catEyesProps.type === \"expanded\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={baseNecklaceSelector} display={catNecklaceProps.type !== \"blank\" ? \"visible\" : \"none\"} fill={catNecklaceProps.fill} stroke={catNecklaceProps.stroke} />\r\n                <SvgProxy selector={roundNecklaceSelector} display={catNecklaceProps.type === \"round\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={heartNecklaceSelector} display={catNecklaceProps.type === \"heart\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={ribbonNecklaceSelector} display={catNecklaceProps.type === \"ribbon\" ? \"visible\" : \"none\"} fill={catNecklaceProps.fill} stroke={catNecklaceProps.stroke} />\r\n                <SvgProxy selector={necklaceTextSelector} display={catNecklaceProps.type !== \"ribbon\" && catNecklaceProps.type !== \"blank\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={topHatSelector + \", #tophat-base-shadow, #tophat-top-shadow, #tophat-line\"} display={catHatProps.type === \"tophat\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={topHatSelector} fill={catHatProps.fill} stroke={catHatProps.stroke} />\r\n                <SvgProxy selector={\"#tophat-line\"} fill={catHatProps.stroke} stroke={catHatProps.stroke} />\r\n                <SvgProxy selector={partyHatSelector + \", #party, #party-shadow\"} display={catHatProps.type === \"party\" ? \"visible\" : \"none\"} />\r\n                <SvgProxy selector={partyHatSelector} fill={catHatProps.fill} />\r\n            </SvgLoader>\r\n        </div>\r\n    )\r\n}","export const getFilterFromValue = (value: string) => {\r\n    switch (value) {\r\n        case \"grayscale\":\r\n            return \"grayscale(100%)\"\r\n        case \"invert\":\r\n            return \"invert(100%)\"\r\n        case \"sepia\":\r\n            return \"sepia(60%)\"\r\n        default:\r\n            return \"none\";\r\n    }\r\n}","export const handleCamera = (currentAttribute: string) => {\r\n    switch (currentAttribute) {\r\n        default:\r\n            return \"\";\r\n        case \"eyes\":\r\n            return \"CatView--eyes\";\r\n        case \"necklace\":\r\n            return \"CatView--necklace\"\r\n        case \"hat\":\r\n            return \"CatView--hat\"\r\n    }\r\n}","import React from 'react';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport { CatView } from '../CatView/CatView';\r\nimport './EditView.css';\r\n\r\ninterface EditViewProps {\r\n    catProps: CatPropsType;\r\n    currentAttribute: string;\r\n}\r\n\r\nexport const EditView: React.FC<EditViewProps> = ({ catProps, currentAttribute }) => {\r\n    return (\r\n        <div className=\"EditView\">\r\n            <CatView catProps={catProps} currentAttribute={currentAttribute} />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { EditPanel } from '../../components/EditPanel/EditPanel';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport './Creator.css';\r\nimport { useParams } from 'react-router';\r\nimport { initialCatProps } from '../App/initialCatProps';\r\nimport { initialAttributeOptions } from '../App/initialAttributeOptions';\r\nimport { AttributeOptionType } from '../../utils/AttributeOptionType';\r\nimport { EditView } from '../../components/EditView/EditView';\r\n\r\ninterface CreatorProps {\r\n    catList: CatPropsType[];\r\n    onSaveCat: (id: string, elem: CatPropsType) => void;\r\n}\r\n\r\nexport const Creator: React.FC<CreatorProps> = ({ catList, onSaveCat }) => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const [catProps, setCatProps] = useState(initialCatProps);\r\n    const [currentAttribute, setCurrentAttribute] = useState(\"fur\");\r\n    const [attributeOptions, setAttributeOptions] = useState<AttributeOptionType[]>(initialAttributeOptions);\r\n\r\n    useEffect(() => {\r\n        const catPropsElem = catList.find((elem) => {\r\n            return elem.id === id;\r\n        });\r\n        if (catPropsElem) {\r\n            setCatProps(catPropsElem);\r\n        } else {\r\n            setCatProps(JSON.parse(JSON.stringify(initialCatProps)));\r\n        }\r\n        setCurrentAttribute(\"fur\");\r\n        setAttributeOptions(JSON.parse(JSON.stringify(initialAttributeOptions)));\r\n    }, [id, catList]);\r\n\r\n    const handleCatName = (newName: string) => {\r\n        const catCopy = { ...catProps! }\r\n        catCopy.catName = newName;\r\n        setCatProps(catCopy);\r\n    }\r\n\r\n    const handleCurrentAttribute = (newCurrentAttribute: string) => {\r\n        const copy = attributeOptions.slice();\r\n        copy.forEach(e => {\r\n            if (e.id === newCurrentAttribute) {\r\n                e.checked = true;\r\n            } else e.checked = false;\r\n        })\r\n        setAttributeOptions(copy);\r\n        setCurrentAttribute(newCurrentAttribute);\r\n    }\r\n\r\n    const handleAttributeType = (newType: string) => {\r\n        const catCopy = { ...catProps! };\r\n        const catSettingsCopy = [...catCopy.settings];\r\n\r\n        const catSettingsIndex = catSettingsCopy.findIndex((elem) => {\r\n            return elem.id === currentAttribute;\r\n        });\r\n\r\n        catSettingsCopy[catSettingsIndex].type = newType;\r\n        catCopy.settings = catSettingsCopy;\r\n\r\n        const attributeOptionsCopy = attributeOptions.slice();\r\n        const attributeOptionsIndex = attributeOptionsCopy.findIndex(elem => {\r\n            return elem.id === currentAttribute;\r\n        })\r\n        const itemListCopy = attributeOptionsCopy[attributeOptionsIndex].itemList;\r\n\r\n        itemListCopy.forEach(elem => {\r\n            if (elem.value === catSettingsCopy[catSettingsIndex].type) {\r\n                elem.checked = true;\r\n            } else {\r\n                elem.checked = false;\r\n            }\r\n        })\r\n        attributeOptionsCopy[attributeOptionsIndex].itemList = itemListCopy;\r\n        setCatProps(catCopy)\r\n        setAttributeOptions(attributeOptionsCopy);\r\n    }\r\n\r\n    const handleAttributeColor = (colorFill: string, colorStroke: string) => {\r\n        const catCopy = { ...catProps! };\r\n        const catSettingsCopy = [...catCopy.settings];\r\n        const catSettingsIndex = catSettingsCopy.findIndex((elem) => {\r\n            return elem.id === currentAttribute;\r\n        });\r\n        catSettingsCopy[catSettingsIndex].fill = colorFill;\r\n        catSettingsCopy[catSettingsIndex].stroke = colorStroke;\r\n        catCopy.settings = catSettingsCopy;\r\n        setCatProps(catCopy);\r\n    }\r\n\r\n    const handleChangeFilter = (value: string) => {\r\n        const catPropsCopy = {...catProps};\r\n        catPropsCopy.filter = value;\r\n        setCatProps(catPropsCopy);\r\n    }\r\n\r\n    return (\r\n        <article className=\"Creator\">\r\n            <EditView catProps={catProps!} currentAttribute={currentAttribute} />\r\n            <EditPanel catProps={catProps!} onEditCatName={handleCatName} attributeOptions={attributeOptions} currentAttribute={currentAttribute} onEditAttributeType={handleAttributeType} onEditAttributeColor={handleAttributeColor} onChangeFilter={handleChangeFilter} onChangeCurrentAttribute={handleCurrentAttribute} onSaveCat={onSaveCat} />\r\n        </article>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Intro.css'\r\n\r\ninterface IntroProps {\r\n\r\n}\r\n\r\nexport const Intro: React.FC<IntroProps> = () => {\r\n    return (\r\n        <article className=\"Intro\">\r\n            <section className=\"Intro__container\">\r\n                <h1 className=\"Intro__title\" >Cat creator</h1>\r\n                <section className=\"Intro__controls\">\r\n                    <Link className=\"Intro__btn\" to={`/create/new`}>Crear un gato</Link>\r\n                    <Link className=\"Intro__btn Intro__btn--gray\" to={`/cats/`}>Ver creados</Link>\r\n                </section>\r\n            </section>\r\n        </article>\r\n    )\r\n}","import React, { useRef, useState } from 'react';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport \"./CatItem.css\";\r\nimport { CatView } from '../CatView/CatView';\r\nimport { Link } from 'react-router-dom';\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\n\r\ninterface CatItemProps {\r\n    catProps: CatPropsType;\r\n    onDeleteCat: () => void;\r\n}\r\n\r\nexport const CatItem: React.FC<CatItemProps> = ({ catProps, onDeleteCat }) => {\r\n\r\n    const catPreviewRef = useRef(null);\r\n    const [isDownloading, setIsDownloading] = useState(false);\r\n\r\n    const handleDownloadCat = () => {\r\n        setIsDownloading(true)\r\n        domtoimage.toBlob(catPreviewRef.current!)\r\n            .then(function (blob) {\r\n                saveAs(blob, `${catProps.catName}-${catProps.id}.png`);\r\n                setIsDownloading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"CatItem\">\r\n            <div className={`CatItem__preview${isDownloading ? \" CatItem__preview--big\" : \"\"}`} ref={catPreviewRef} >\r\n                <CatView catProps={catProps} currentAttribute={\"fur\"} />\r\n            </div>\r\n            <div className=\"CatItem__info\">\r\n                <h3>{catProps.catName}</h3>\r\n                <p><strong>Id:</strong> {catProps.id}</p>\r\n                <p><strong>Fecha:</strong> {new Date(catProps.creationDate).toLocaleDateString(\"es-ES\")}</p>\r\n                <p><strong>Hora:</strong> {new Date(catProps.creationDate).toLocaleTimeString(\"es-ES\")}</p>\r\n            </div>\r\n            <div className=\"CatItem__control\">\r\n                <Link to={`/create/${catProps.id}`} className=\"CatItem__btn CatItem__btn--edit\">\r\n                    Editar\r\n                </Link>\r\n                <button className=\"CatItem__btn CatItem__btn--delete\" onClick={onDeleteCat} >\r\n                    Eliminar\r\n                </button>\r\n                <button className=\"CatItem__btn CatItem__btn--download\" onClick={() => { handleDownloadCat() }} >\r\n                    Descargar imagen\r\n                </button>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CatItem } from '../../components/CatItem/CatItem';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport \"./CreatedCats.css\";\r\n\r\ninterface CreatedCatsProps {\r\n    catList: CatPropsType[];\r\n    onDeleteCat: (id: string) => void;\r\n}\r\n\r\nexport const CreatedCats: React.FC<CreatedCatsProps> = ({ catList, onDeleteCat }) => {\r\n\r\n    return (\r\n        <article className=\"CreatedCats\" >\r\n            <h2 className=\"CreatedCats__title\">Gatos creados</h2>\r\n            <Link className=\"CreatedCats__newBtn\" to={`/create/new`}>Crear gato nuevo</Link>\r\n            <section className=\"CreatedCats__container\">\r\n                {catList.map((elem) => {\r\n                    const intermediateDeleteCat = () => {\r\n                        onDeleteCat(elem.id);\r\n                    }\r\n                    return <CatItem key={elem.id} catProps={elem} onDeleteCat={intermediateDeleteCat} />\r\n                })}\r\n            </section>\r\n        </article>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Creator } from '../Creator/Creator';\r\nimport { Intro } from '../Intro/Intro';\r\nimport { CreatedCats } from '../CreatedCats/CreatedCats';\r\nimport { CatPropsType } from '../../utils/CatPropsType';\r\nimport \"./reset.css\";\r\nimport './App.css';\r\n\r\nexport const App = () => {\r\n    const storageList: CatPropsType[] = JSON.parse(window.localStorage.getItem('catList')!);\r\n    const [catList, setCatList] = useState<CatPropsType[]>(storageList || []);\r\n\r\n    useEffect(\r\n        () => {\r\n            window.localStorage.setItem('catList', JSON.stringify(catList));\r\n        },\r\n        [catList]);\r\n\r\n    const handleSaveCat = (id: string, elem: CatPropsType) => {\r\n        const catListCopy = [...catList];\r\n        const catIndex = catListCopy.findIndex((e) => {\r\n            return e.id === id;\r\n        })\r\n\r\n        if (catListCopy[catIndex]) {\r\n            catListCopy[catIndex] = elem;\r\n            setCatList(catListCopy)\r\n        } else {\r\n            const newCat = elem;\r\n            newCat.id = Math.round(Math.random() * (10000000000 - 1)).toString();\r\n            newCat.creationDate = Date.now();\r\n            if (newCat.catName === \"\") {\r\n                newCat.catName = \"Sin nombre\";\r\n            }\r\n            catListCopy.push(newCat);\r\n            setCatList(catListCopy);\r\n        }\r\n    }\r\n\r\n    const handleDeleteCat = (id: string) => {\r\n        const catListCopy = catList.slice();\r\n        const catIndex = catList.findIndex((elem) => {\r\n            return elem.id === id;\r\n        })\r\n        catListCopy.splice(catIndex, 1);\r\n        setCatList(catListCopy);\r\n    }\r\n\r\n    return (\r\n        <main className=\"App\">\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n                <Route path=\"/\" exact render={() => <Intro />} />\r\n                <Route path=\"/create/:id\" render={() =>\r\n                    <Creator catList={catList} onSaveCat={handleSaveCat} />}\r\n                />\r\n                <Route path=\"/cats/\" render={() => <CreatedCats catList={catList} onDeleteCat={handleDeleteCat} />} />\r\n            </HashRouter>\r\n        </main>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './containers/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}